{
    "collab_server" : "",
    "contents" : "LOOCV <- function(features, X, Y){\n  X <- X[,features]\n  data <- as.data.frame(cbind(X,Y))\n  names(data)[ncol(data)] <- \"label\"\n  error <- 0\n  for(i in 1:nrow(data)){\n    model.lr <- glm(label ~ ., data = data[-i,], family = binomial(logit))\n    pr.lr <- predict(model.lr,data[i,], type = \"response\")\n    pr.lr <- ifelse(pr.lr >= 0.5, 1, 0)\n    error <- error + length(which(pr.lr != data[i, ncol(data)]))\n  }\n  return(error / length(Y))\n}\n\n\nCV <- function(y, fold = 10){\n  zero.index <- which(y == 0)\n  zero.index <- sample(zero.index, length(zero.index))\n  one.index <- which(y == 1)\n  one.index <- sample(one.index, length(one.index))\n  \n  cv.zero.test <- split(zero.index, 1:fold)\n  cv.one.test <- split(one.index, 1:fold)\n  cv.test <- list()\n  for(i in 1:fold){\n    cv.test[[i]] <- c(cv.zero.test[[i]], cv.one.test[[i]])\n  }\n  \n  cv.train <- list()\n  for(i in 1:fold){\n    cv.train[[i]] <- setdiff(1:length(y), cv.test[[i]])\n  }\n  cv <- list()\n  cv$test <- cv.test\n  cv$train <- cv.train\n  return(cv)\n}\n\n\n\nKFold <- function(features, X, Y, fold, n){\n  X <- as.matrix(X[,features])\n  data <- as.data.frame(cbind(X,Y))\n  names(data)[ncol(data)] <- \"label\"\n  error <- numeric(n)\n  for(t in 1:n){\n    set.seed(t)\n    cv <- CV(Y, fold)\n    predY <- numeric(length(Y))\n    for(i in 1:fold){\n      model <- glm(label ~ ., data = data[cv$train[[i]],], family = binomial(logit))\n      pred <- c()\n      if(length(cv$test[[i]]) != 0){\n        pred <- predict(model, data[cv$test[[i]],], type = \"response\")\n      }\n      predY[cv$test[[i]]] <- pred\n    }\n    predY <- ifelse(predY >= 0.5, 1, 0)\n    error[t] <- length(which(predY != Y)) / length(Y)\n  }\n  return(c(mean(error),sd(error)))\n}\n\n\nrm.bias <- function(result, data, fold, times, count){\n  require(foreach)\n  require(doParallel)\n  \n  cl <- makeCluster(count , type = \"SOCK\")\n  registerDoParallel(cl)\n  \n  for(i in 1:length(result)){\n    features.set <- as.matrix(result[[i]][,1:(ncol(result[[i]])-1)])\n    LOOCV.result <- foreach(j = 1:nrow(features.set), .combine='c') %dopar%{\n      LOOCV(features.set[j,], data$x, data$y)\n    }\n    result[[i]] <- cbind(result[[i]], loocv = LOOCV.result)\n    \n    KFold.result <- foreach(j = 1:nrow(features.set)) %dopar%{\n      KFold(features.set[j,], data$x, data$y ,fold, times)\n    }\n    KFold.result <- do.call(\"rbind\", KFold.result)\n    colnames(KFold.result) <- c(\"mean-10-fold\", \"sd-10-fold\")\n    result[[i]] <- cbind(result[[i]], KFold.result)\n  }\n  stopCluster(cl)\n  return(result)\n  \n}\n\n\n\n\n",
    "created" : 1504841711835.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2346427721",
    "id" : "68BD2209",
    "lastKnownWriteTime" : 1405948806,
    "last_content_update" : 1405948806,
    "path" : "~/Documents/LRCUDA/R/rm.bias.R",
    "project_path" : "R/rm.bias.R",
    "properties" : {
    },
    "relative_order" : 11,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}